import{S as Hs,i as Ms,s as As,e as n,t as s,c as o,a as p,g as e,d as t,b as l,Y as Cs,_ as ds,f as Ds,I as a,W as qa}from"./vendor-af5f36de.js";function Rs(gs){let r,x,k,aa,sa,I,ea,h,ta,G,na,oa,N,pa,la,j,ms=`<code class="language-undefined">pages/
  home.md
  my-new-page.md \u{1F448}</code>`,W,ra,H,ks=`<code class="language-undefined">pages/
  home.md
  quickstart/ \u{1F448}
    install.md
    booting-up.md
</code>`,q,ca,M,fs=`<code class="language-yaml"><span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">-</span>
<span class="token key atrule">published</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># \u2757REQUIRED</span>
<span class="token key atrule">title</span><span class="token punctuation">:</span> My page title <span class="token comment"># \u2757REQUIRED</span>
<span class="token key atrule">description</span><span class="token punctuation">:</span> Something about this page
<span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># Use to order pages in the menu</span>
<span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">-</span></code>`,g,ia,f,ua,da,y,ha,ga,A,ys=`<code class="language-markdown">::: section body-text

<span class="token title important"><span class="token punctuation">#</span> My title</span>

Lorem ipsum...

&#96;&#96;&#96;javascript
console.log('Hello world!');
&#96;&#96;&#96;

:::</code>`,v,ma,E,ka,fa,C,vs=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">'$lib/components/MyComponent.svelte'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

# My title

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scss<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">h1</span> <span class="token punctuation">&#123;</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> monospace<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code>`,w,ya,B,va,Ea,D,_,wa,R,_a,J,ba,m,Pa,Y,xa,ja,$,Ha,Ma,O,Es=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> assets <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'$app/paths'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

Lorem ipsum markdown...

<span class="token comment">&lt;!-- \u2705 Use an image tag --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src="</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>assets<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/images/my-image.jpg</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">&#125;</span></span><span class="token attr-name">"</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my image<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

<span class="token comment">&lt;!-- \u274C Not markdown for local images --></span>
<span class="token comment">&lt;!-- ![](/images/my-image.jpg) --></span></code>`,T,b,Aa,i,Ca,P,Da,Ra,K,Oa,Ta,Q,La,Sa,F,Ua,Ia,Z,Ga,u,Ba;return{c(){r=n("section"),x=n("h1"),k=n("a"),aa=s("\u{1F4DD} "),sa=s(hs),I=n("p"),ea=s("Pages in your docs are created through markdown files."),h=n("p"),ta=s("To add one, make a "),G=n("code"),na=s(".md"),oa=s(" file in the "),N=n("code"),pa=s("pages/"),la=s(" directory of your project."),j=n("pre"),W=n("p"),ra=s("You can also put files a folder deep, which will group your docs in the menu."),H=n("pre"),q=n("p"),ca=s("Each file should start with some front matter data like this:"),M=n("pre"),g=n("p"),ia=s("Now write your docs using "),f=n("a"),ua=s("markdown"),da=s(" syntax, with extras like "),y=n("a"),ha=s("containers"),ga=s("."),A=n("pre"),v=n("p"),ma=s("And if simple markdown isn\u2019t enough, the docs are also processed with "),E=n("a"),ka=s("mdsvex"),fa=s(", so you can use Svelte components and syntax directly in your markdown files!"),C=n("pre"),w=n("p"),ya=s("Add Svelte components or custom styles in the "),B=n("code"),va=s("src/lib"),Ea=s(" directory of your project."),D=n("h3"),_=n("a"),wa=s("Images"),R=n("p"),_a=s("One small rule: "),J=n("em"),ba=s("Don\u2019t use markdown image syntax for images located in your project."),m=n("p"),Pa=s("Because the paths to images must be absolute (i.e., "),Y=n("code"),xa=s("https://..."),ja=s("), you should use SvelteKit\u2019s "),$=n("code"),Ha=s("assets"),Ma=s(" store to prefix paths to local images instead. Just import and use the store in your markdown files like:"),O=n("pre"),T=n("h3"),b=n("a"),Aa=s("Publishing"),i=n("p"),Ca=s("When you\u2019re ready, configure "),P=n("a"),Da=s("GitHub Pages in the settings"),Ra=s(" of your repo \u2014 Use the "),K=n("code"),Oa=s("docs/"),Ta=s(" folder for your publishing source! \u2014 and put the URL to your Pages site in the "),Q=n("code"),La=s("homepage"),Sa=s(" key of your project\u2019s "),F=n("code"),Ua=s("package.json"),Ia=s("."),Z=n("p"),Ga=s("Now upload your project to GitHub, sit back and relax. Through the magic of GitHub Actions, your site will rebuild to reflect your latest updates every time you push. \u{1F37A}"),u=n("iframe"),this.h()},l(z){r=o(z,"SECTION",{class:!0});var c=p(r);x=o(c,"H1",{id:!0});var Ja=p(x);k=o(Ja,"A",{class:!0,href:!0});var Na=p(k);aa=e(Na,"\u{1F4DD} "),sa=e(Na,hs),Na.forEach(t),Ja.forEach(t),I=o(c,"P",{});var Ya=p(I);ea=e(Ya,"Pages in your docs are created through markdown files."),Ya.forEach(t),h=o(c,"P",{});var L=p(h);ta=e(L,"To add one, make a "),G=o(L,"CODE",{});var $a=p(G);na=e($a,".md"),$a.forEach(t),oa=e(L," file in the "),N=o(L,"CODE",{});var Ka=p(N);pa=e(Ka,"pages/"),Ka.forEach(t),la=e(L," directory of your project."),L.forEach(t),j=o(c,"PRE",{class:!0});var ws=p(j);ws.forEach(t),W=o(c,"P",{});var Qa=p(W);ra=e(Qa,"You can also put files a folder deep, which will group your docs in the menu."),Qa.forEach(t),H=o(c,"PRE",{class:!0});var _s=p(H);_s.forEach(t),q=o(c,"P",{});var Fa=p(q);ca=e(Fa,"Each file should start with some front matter data like this:"),Fa.forEach(t),M=o(c,"PRE",{class:!0});var bs=p(M);bs.forEach(t),g=o(c,"P",{});var S=p(g);ia=e(S,"Now write your docs using "),f=o(S,"A",{href:!0,rel:!0});var Za=p(f);ua=e(Za,"markdown"),Za.forEach(t),da=e(S," syntax, with extras like "),y=o(S,"A",{href:!0,rel:!0});var za=p(y);ha=e(za,"containers"),za.forEach(t),ga=e(S,"."),S.forEach(t),A=o(c,"PRE",{class:!0});var Ps=p(A);Ps.forEach(t),v=o(c,"P",{});var V=p(v);ma=e(V,"And if simple markdown isn\u2019t enough, the docs are also processed with "),E=o(V,"A",{href:!0,rel:!0});var Va=p(E);ka=e(Va,"mdsvex"),Va.forEach(t),fa=e(V,", so you can use Svelte components and syntax directly in your markdown files!"),V.forEach(t),C=o(c,"PRE",{class:!0});var xs=p(C);xs.forEach(t),w=o(c,"P",{});var X=p(w);ya=e(X,"Add Svelte components or custom styles in the "),B=o(X,"CODE",{});var Xa=p(B);va=e(Xa,"src/lib"),Xa.forEach(t),Ea=e(X," directory of your project."),X.forEach(t),D=o(c,"H3",{id:!0});var as=p(D);_=o(as,"A",{class:!0,href:!0});var ss=p(_);wa=e(ss,"Images"),ss.forEach(t),as.forEach(t),R=o(c,"P",{});var Wa=p(R);_a=e(Wa,"One small rule: "),J=o(Wa,"EM",{});var es=p(J);ba=e(es,"Don\u2019t use markdown image syntax for images located in your project."),es.forEach(t),Wa.forEach(t),m=o(c,"P",{});var U=p(m);Pa=e(U,"Because the paths to images must be absolute (i.e., "),Y=o(U,"CODE",{});var ts=p(Y);xa=e(ts,"https://..."),ts.forEach(t),ja=e(U,"), you should use SvelteKit\u2019s "),$=o(U,"CODE",{});var ns=p($);Ha=e(ns,"assets"),ns.forEach(t),Ma=e(U," store to prefix paths to local images instead. Just import and use the store in your markdown files like:"),U.forEach(t),O=o(c,"PRE",{class:!0});var js=p(O);js.forEach(t),T=o(c,"H3",{id:!0});var os=p(T);b=o(os,"A",{class:!0,href:!0});var ps=p(b);Aa=e(ps,"Publishing"),ps.forEach(t),os.forEach(t),i=o(c,"P",{});var d=p(i);Ca=e(d,"When you\u2019re ready, configure "),P=o(d,"A",{href:!0,rel:!0});var ls=p(P);Da=e(ls,"GitHub Pages in the settings"),ls.forEach(t),Ra=e(d," of your repo \u2014 Use the "),K=o(d,"CODE",{});var rs=p(K);Oa=e(rs,"docs/"),rs.forEach(t),Ta=e(d," folder for your publishing source! \u2014 and put the URL to your Pages site in the "),Q=o(d,"CODE",{});var cs=p(Q);La=e(cs,"homepage"),cs.forEach(t),Sa=e(d," key of your project\u2019s "),F=o(d,"CODE",{});var is=p(F);Ua=e(is,"package.json"),is.forEach(t),Ia=e(d,"."),d.forEach(t),Z=o(c,"P",{});var us=p(Z);Ga=e(us,"Now upload your project to GitHub, sit back and relax. Through the magic of GitHub Actions, your site will rebuild to reflect your latest updates every time you push. \u{1F37A}"),us.forEach(t),u=o(c,"IFRAME",{title:!0,src:!0,style:!0,width:!0,height:!0,frameborder:!0,class:!0}),p(u).forEach(t),c.forEach(t),this.h()},h(){l(k,"class","heading-link"),l(k,"href","#-title"),l(x,"id","-title"),l(j,"class","language-undefined"),l(H,"class","language-undefined"),l(M,"class","language-yaml"),l(f,"href","https://guides.github.com/features/mastering-markdown/"),l(f,"rel","nofollow"),l(y,"href","https://www.npmjs.com/package/remark-containers"),l(y,"rel","nofollow"),l(A,"class","language-markdown"),l(E,"href","https://mdsvex.com/"),l(E,"rel","nofollow"),l(C,"class","language-svelte"),l(_,"class","heading-link"),l(_,"href","#images"),l(D,"id","images"),l(O,"class","language-svelte"),l(b,"class","heading-link"),l(b,"href","#publishing"),l(T,"id","publishing"),l(P,"href","https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#choosing-a-publishing-source"),l(P,"rel","nofollow"),l(u,"title","beer time gif"),Cs(u.src,Ba="https://giphy.com/embed/Zw3oBUuOlDJ3W")||l(u,"src",Ba),ds(u,"pointer-events","none"),ds(u,"border-radius","10px"),l(u,"width","240"),l(u,"height","223"),l(u,"frameborder","0"),l(u,"class","giphy-embed"),l(r,"class","body-text")},m(z,c){Ds(z,r,c),a(r,x),a(x,k),a(k,aa),a(k,sa),a(r,I),a(I,ea),a(r,h),a(h,ta),a(h,G),a(G,na),a(h,oa),a(h,N),a(N,pa),a(h,la),a(r,j),j.innerHTML=ms,a(r,W),a(W,ra),a(r,H),H.innerHTML=ks,a(r,q),a(q,ca),a(r,M),M.innerHTML=fs,a(r,g),a(g,ia),a(g,f),a(f,ua),a(g,da),a(g,y),a(y,ha),a(g,ga),a(r,A),A.innerHTML=ys,a(r,v),a(v,ma),a(v,E),a(E,ka),a(v,fa),a(r,C),C.innerHTML=vs,a(r,w),a(w,ya),a(w,B),a(B,va),a(w,Ea),a(r,D),a(D,_),a(_,wa),a(r,R),a(R,_a),a(R,J),a(J,ba),a(r,m),a(m,Pa),a(m,Y),a(Y,xa),a(m,ja),a(m,$),a($,Ha),a(m,Ma),a(r,O),O.innerHTML=Es,a(r,T),a(T,b),a(b,Aa),a(r,i),a(i,Ca),a(i,P),a(P,Da),a(i,Ra),a(i,K),a(K,Oa),a(i,Ta),a(i,Q),a(Q,La),a(i,Sa),a(i,F),a(F,Ua),a(i,Ia),a(r,Z),a(Z,Ga),a(r,u)},p:qa,i:qa,o:qa,d(z){z&&t(r)}}}const Os={title:"Making pages",description:"How to make pages",published:!0,order:1},{title:hs,description:Ls,published:Ss,order:Us}=Os;class Is extends Hs{constructor(r){super();Ms(this,r,null,Rs,As,{})}}export{Is as default,Os as metadata};
