import{S as Ve,i as $e,s as ze,e as n,t as a,c as o,a as l,g as s,d as t,b as c,f as Be,I as e,V as me}from"./vendor-c1d6f12c.js";function Fe(De){let r,w,h,Q,W,C,Y,i,V,R,$,z,S,B,F,E,Ge=`<code class="language-undefined">pages/
  home.md
  my-new-page.md \u{1F448}</code>`,D,J,_,Le=`<code class="language-undefined">pages/
  home.md
  quickstart/ \u{1F448}
    install.md
    booting-up.md
</code>`,G,K,b,Ne=`<code class="language-yaml"><span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">-</span>
<span class="token key atrule">published</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># \u2757REQUIRED</span>
<span class="token key atrule">title</span><span class="token punctuation">:</span> My page title <span class="token comment"># \u2757REQUIRED</span>
<span class="token key atrule">description</span><span class="token punctuation">:</span> Something about this page
<span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># Use to order pages in the menu</span>
<span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">-</span></code>`,u,X,g,Z,ee,f,ae,se,P,Oe=`<code class="language-markdown">::: section body-text

<span class="token title important"><span class="token punctuation">#</span> My title</span>

Lorem ipsum...

&#96;&#96;&#96;javascript
console.log('Hello world!');
&#96;&#96;&#96;

:::</code>`,k,te,m,ne,oe,x,Ue=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">'$lib/components/MyComponent.svelte'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

# My title

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scss<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">h1</span> <span class="token punctuation">&#123;</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> monospace<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code>`,y,le,L,re,pe,H,M,ce,d,ie,v,ue,de,N,he,ge,O,fe;return{c(){r=n("section"),w=n("h1"),h=n("a"),Q=a("\u{1F4DD} "),W=a(Se),C=n("p"),Y=a("Pages in your docs are created through markdown files."),i=n("p"),V=a("To add one, make a "),R=n("code"),$=a(".md"),z=a(" file in the "),S=n("code"),B=a("pages/"),F=a(" directory of your project."),E=n("pre"),D=n("p"),J=a("You can also put files a folder deep, which will group your docs in the menu."),_=n("pre"),G=n("p"),K=a("Each file should start with some front matter data like this:"),b=n("pre"),u=n("p"),X=a("Now write your docs using "),g=n("a"),Z=a("markdown"),ee=a(" syntax, with extras like "),f=n("a"),ae=a("containers"),se=a("."),P=n("pre"),k=n("p"),te=a("And if simple markdown isn\u2019t enough, the docs are also processed with "),m=n("a"),ne=a("mdsvex"),oe=a(", so you can use Svelte components and syntax directly in your markdown files!"),x=n("pre"),y=n("p"),le=a("Add Svelte components or custom styles in the "),L=n("code"),re=a("src/lib"),pe=a(" directory of your project."),H=n("h3"),M=n("a"),ce=a("Publishing"),d=n("p"),ie=a("When you\u2019re ready, simply upload your project to GitHub and configure "),v=n("a"),ue=a("GitHub Pages in the settings"),de=a(" of your repo. (Use the "),N=n("code"),he=a("docs/"),ge=a(" folder for your publishing source!)"),O=n("p"),fe=a("Now sit back and relax. Through the magic of GitHub Actions, your site will rebuild to reflect your latest updates every time you push to master. \u{1F37A}"),this.h()},l(U){r=o(U,"SECTION",{class:!0});var p=l(r);w=o(p,"H1",{id:!0});var ye=l(w);h=o(ye,"A",{href:!0});var ke=l(h);Q=s(ke,"\u{1F4DD} "),W=s(ke,Se),ke.forEach(t),ye.forEach(t),C=o(p,"P",{});var ve=l(C);Y=s(ve,"Pages in your docs are created through markdown files."),ve.forEach(t),i=o(p,"P",{});var A=l(i);V=s(A,"To add one, make a "),R=o(A,"CODE",{});var we=l(R);$=s(we,".md"),we.forEach(t),z=s(A," file in the "),S=o(A,"CODE",{});var Ee=l(S);B=s(Ee,"pages/"),Ee.forEach(t),F=s(A," directory of your project."),A.forEach(t),E=o(p,"PRE",{class:!0});var Ie=l(E);Ie.forEach(t),D=o(p,"P",{});var _e=l(D);J=s(_e,"You can also put files a folder deep, which will group your docs in the menu."),_e.forEach(t),_=o(p,"PRE",{class:!0});var qe=l(_);qe.forEach(t),G=o(p,"P",{});var be=l(G);K=s(be,"Each file should start with some front matter data like this:"),be.forEach(t),b=o(p,"PRE",{class:!0});var Qe=l(b);Qe.forEach(t),u=o(p,"P",{});var j=l(u);X=s(j,"Now write your docs using "),g=o(j,"A",{href:!0,rel:!0});var Pe=l(g);Z=s(Pe,"markdown"),Pe.forEach(t),ee=s(j," syntax, with extras like "),f=o(j,"A",{href:!0,rel:!0});var xe=l(f);ae=s(xe,"containers"),xe.forEach(t),se=s(j,"."),j.forEach(t),P=o(p,"PRE",{class:!0});var We=l(P);We.forEach(t),k=o(p,"P",{});var I=l(k);te=s(I,"And if simple markdown isn\u2019t enough, the docs are also processed with "),m=o(I,"A",{href:!0,rel:!0});var He=l(m);ne=s(He,"mdsvex"),He.forEach(t),oe=s(I,", so you can use Svelte components and syntax directly in your markdown files!"),I.forEach(t),x=o(p,"PRE",{class:!0});var Ye=l(x);Ye.forEach(t),y=o(p,"P",{});var q=l(y);le=s(q,"Add Svelte components or custom styles in the "),L=o(q,"CODE",{});var Me=l(L);re=s(Me,"src/lib"),Me.forEach(t),pe=s(q," directory of your project."),q.forEach(t),H=o(p,"H3",{id:!0});var Ae=l(H);M=o(Ae,"A",{href:!0});var je=l(M);ce=s(je,"Publishing"),je.forEach(t),Ae.forEach(t),d=o(p,"P",{});var T=l(d);ie=s(T,"When you\u2019re ready, simply upload your project to GitHub and configure "),v=o(T,"A",{href:!0,rel:!0});var Te=l(v);ue=s(Te,"GitHub Pages in the settings"),Te.forEach(t),de=s(T," of your repo. (Use the "),N=o(T,"CODE",{});var Ce=l(N);he=s(Ce,"docs/"),Ce.forEach(t),ge=s(T," folder for your publishing source!)"),T.forEach(t),O=o(p,"P",{});var Re=l(O);fe=s(Re,"Now sit back and relax. Through the magic of GitHub Actions, your site will rebuild to reflect your latest updates every time you push to master. \u{1F37A}"),Re.forEach(t),p.forEach(t),this.h()},h(){c(h,"href","#-title"),c(w,"id","-title"),c(E,"class","language-undefined"),c(_,"class","language-undefined"),c(b,"class","language-yaml"),c(g,"href","https://guides.github.com/features/mastering-markdown/"),c(g,"rel","nofollow"),c(f,"href","https://www.npmjs.com/package/remark-containers"),c(f,"rel","nofollow"),c(P,"class","language-markdown"),c(m,"href","https://mdsvex.com/"),c(m,"rel","nofollow"),c(x,"class","language-svelte"),c(M,"href","#publishing"),c(H,"id","publishing"),c(v,"href","https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#choosing-a-publishing-source"),c(v,"rel","nofollow"),c(r,"class","body-text")},m(U,p){Be(U,r,p),e(r,w),e(w,h),e(h,Q),e(h,W),e(r,C),e(C,Y),e(r,i),e(i,V),e(i,R),e(R,$),e(i,z),e(i,S),e(S,B),e(i,F),e(r,E),E.innerHTML=Ge,e(r,D),e(D,J),e(r,_),_.innerHTML=Le,e(r,G),e(G,K),e(r,b),b.innerHTML=Ne,e(r,u),e(u,X),e(u,g),e(g,Z),e(u,ee),e(u,f),e(f,ae),e(u,se),e(r,P),P.innerHTML=Oe,e(r,k),e(k,te),e(k,m),e(m,ne),e(k,oe),e(r,x),x.innerHTML=Ue,e(r,y),e(y,le),e(y,L),e(L,re),e(y,pe),e(r,H),e(H,M),e(M,ce),e(r,d),e(d,ie),e(d,v),e(v,ue),e(d,de),e(d,N),e(N,he),e(d,ge),e(r,O),e(O,fe)},p:me,i:me,o:me,d(U){U&&t(r)}}}const Je={title:"Making pages",description:"How to make pages",published:!0,order:1},{title:Se,description:Xe,published:Ze,order:ea}=Je;class aa extends Ve{constructor(r){super();$e(this,r,null,Fe,ze,{})}}export{aa as default,Je as metadata};
